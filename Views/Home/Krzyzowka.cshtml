@model Gry_Słownikowe.Models.ICrosswordModelReadOnly

@{
    int crosswordColumns = Model.Columns;
    int crosswordRows = Model.Rows;

    ViewData["Title"] = "Krzyżówki";
}

<style>
    .cell {
        width: 50px; /* ustaw odpowiednią szerokość */
        height: 50px; /* ustaw odpowiednią wysokość */
        margin: 1px; /* ustaw marginesy na 0 */
        padding: 0; /* ustaw wypełnienie na 0 */
        display: inline-block; /* aby elementy układały się obok siebie */
        text-align: center; /* wycentruj tekst wewnątrz diva */
        border: 1px solid black;
        background-color: yellow;
    }

    .cell:hover{
        background-color: darkgoldenrod;
    }

    .cell_noBoreder{
        width: 50px; /* ustaw odpowiednią szerokość */
        height: 50px; /* ustaw odpowiednią wysokość */
        margin: 1px; /* ustaw marginesy na 0 */
        padding: 0; /* ustaw wypełnienie na 0 */
        display: inline-block; /* aby elementy układały się obok siebie */
        text-align: center; /* wycentruj tekst wewnątrz diva */
    }

    .row{
        width: @crosswordColumns * 50px;
        display: flex;
        max-height: 52px;
        margin: 0;
        padding: 0;
        gap: 0;
    }

    .letterInput {
        border: none; /* Usunięcie ramki */
        background-color: transparent; /* Przezroczyste tło */
        padding: 0; /* Usunięcie wewnętrznego odstępu */
        width: 100%; /* Pełna szerokość */
        height: 100%; /* Pełna wysokość */
        outline: none; /* Usunięcie podświetlenia na focusie */
        box-sizing: border-box; /* Model pudełka */
        text-align: center;
        text-transform: uppercase;
    }

    .container{  
        width: @crosswordColumns * 50px;
        height: @crosswordRows * 50px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin: 0;
        padding: 0;
        gap: 0;
    }
</style>

<h1>!TEST!</h1>

<h2>
    Krzyzówka
</h2>

<div class="container">
    @for (int y = 0; y < crosswordRows; y++)
    {
        <div class="row">
            @for (int x = 0; x < crosswordColumns; x++)
            {
                string inputId = $"{y}_{x}";
                if (Model[y, x] != null)
                {
                    if (@Model[y, x].FirstLetter)
                    {
                        <div class="cell" onclick="handleClick('@inputId')">
                            <input id="@inputId" class="letterInput" type="text" maxlength="1"  />
                        </div>
                    }
                    else
                    {
                        <div class="cell" onclick="handleClick('@inputId')">
                            <input id="@inputId" class="letterInput" type="text" maxlength="1"  />
                        </div>
                    }

                }
                else
                {
                    <div class="cell_noBoreder"></div>
                }
            }
        </div>
    }
</div>

<h2>
    Definicje
</h2>

<ol>
    @for (int i = 0; i < Model.GetDescriptions().Count; i++)
    {
        <li>@Model.GetDescriptions()[i]</li>
    }
</ol>

<script>
    function handleClick(inputId) {
        var input = document.getElementById(inputId);
        var letter = inputId.value;
        var coords = inputId.split("_");
        var row = coords[0];
        var column = coords[1];
        $.ajax({
            url: '/Home/GuessLetter',
            type: 'POST',
            data: { row: row, column: column, letter: letter },
            success: function (response) {
                if (response.success) {
                    input.setAttribute("disabled");
                } else {
  
                    input.value = "";
                }
            },
            error: function (xhr, status, error) {
                console.error('Błąd:', error);
            }
        });
    }

</script>



