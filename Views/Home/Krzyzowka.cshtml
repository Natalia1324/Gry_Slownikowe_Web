@model Gry_Słownikowe.Models.ICrosswordModelReadOnly

@{
    int crosswordColumns = Model.Columns;
    int crosswordRows = Model.Rows;
    int wordsCount = Model.Words;
    int letters = Model.Letters;
    double generationTime = Model.GetGenerationTimeInMils();
    ViewData["Title"] = "Krzyżówki";
}

<style>
    .cell {
        font-size: 1.5vw;
        font-weight: bold;
        width: 100%; /* 100% szerokości komórki */
        height: 100%; /* 100% wysokości komórki */
        text-align: center; /* Wyśrodkowanie zawartości w poziomie */
        display: flex; /* Ustawienie na flex, aby umożliwić wyśrodkowanie zawartości w pionie */
        align-items: center; /* Wyśrodkowanie zawartości w pionie */
        justify-content: center; /* Wyśrodkowanie zawartości w poziomie */
        border: 0.15vw solid black; /* Obramowanie */
        background-color: #b8dbd9; /* Kolor tła */
        border-radius: 15%;
    }

    .cell:not(.guessed-cell):not(.first_letter):hover {
        border-color: #586f7c;
        background-color: #f4f4f9;
    }

    .first_letter:not(.guessed-cell):hover {
        border-color: #586f7c;
        background-color: #b8dbd9;
        color: #f4f4f9;
    }

    .first_letter{
        background-color: #f4f4f9
    }

    .cell_noBoreder{
        width: 100%; /* 100% szerokości komórki */
        height: 100%; /* 100% wysokości komórki */
    }

    .letterInput {
        border: none; /* Usunięcie ramki */
        background-color: transparent; /* Przezroczyste tło */
        padding: 0; /* Usunięcie wewnętrznego odstępu */
        width: 100%; /* Pełna szerokość */
        height: 100%; /* Pełna wysokość */
        outline: none; /* Usunięcie podświetlenia na focusie */
        box-sizing: border-box; /* Model pudełka */
        text-align: center;
        text-transform: uppercase;
        color: inherit;
    }

    .grid_container {
        display: grid;
        grid-template-columns: repeat(@crosswordColumns, 3vw); /* Powtarzaj kolumny o szerokości 50px */
        grid-template-rows: repeat(@crosswordRows, 3vw); /* Powtarzaj rzędy o wysokości 50px */
        gap: 0.15vw; /* Odstęp między komórkami */
        justify-content: center; /* Wyśrodkowanie zawartości w poziomie */
        align-content: center; /* Wyśrodkowanie zawartości w pionie */
        z-index: 1;
        top: 0;
        left: 0;
    }

    .header{
        width: 100%;
        position: relative;
    }

    .start_container{
        background-color: #f4f4f9;
        border-radius: 30px;
        text-align: center; /* Wyśrodkowanie zawartości w poziomie */
        display: flex; /* Ustawienie na flex, aby umożliwić wyśrodkowanie zawartości w pionie */
        width: 100%;
        flex-direction: column;
        justify-content: center; /* Wyśrodkowanie zawartości w poziomie */
        align-content: center; /* Wyśrodkowanie zawartości w pionie */
        row-gap: 15px;
        padding: 30px;
    }

    .main_container{
        padding: 0;
        margin: 0;
        width: 100%;
        min-height: 100%;
        display: flex;
        row-gap: 15px;
        flex-direction: column;

    }

    .descriptions_container{
        width: 100%;
        background-color: #f4f4f9;
        border-radius: 30px;
        padding: 30px;
    }

    .crossword_container{
        width: 100%;
        background-color: #f4f4f9;
        border-radius: 30px;
        padding: 30px;
    }

    .result_container{
        width: 100%;
        min-height: 100%;
        top: 0;
        left: 0;
        position: absolute;
        background-color: #f4f4f9;
        border-radius: 30px;
        row-gap: 15px;
        z-index: 2;
        text-align: center;
        display: flex; 
        justify-content: center;
        flex-direction: column;
        align-content: center;
        transition: 0.5s ease-out;
        padding: 30px;
    }

    .slide{
        left: -200%;  
    }

    button{
        margin-left: auto;
        margin-right: auto;
        padding: 5px;
        width: max-content;
        border-radius: 5px;
    }
    
</style>

<main class="main_container">
    <section class="header">
        <div class="start_container">
            <h1 id="main_h">
                Rozwiążmy krzyżówkę!
            </h1>
            <h3>
                Czas generacji: @generationTime ms
            </h3>
            <h3>
                Słów: @wordsCount
            </h3>
            <button onclick ="location.reload()">Inna krzyżówka</button>
        </div>

        <div id="result_div" class="result_container slide">
            <h1>Gratulacje!</h1>
            <h3>Twój wynik: @letters odgadniętych liter!</h3>
            <h3 id="time_h"></h3>
            <button>Powrót do menu</button>
        </div>
    </section>

    <section class="crossword_container">

        <div class="grid_container">
            @for (int y = 0; y < crosswordRows; y++)
            {
                @for (int x = 0; x < crosswordColumns; x++)
                {
                    string inputId = $"{y}_{x}";
                    string divID = "div_" + inputId;
                    if (Model[y, x] != null)
                    {
                        if (@Model[y, x].FirstLetter)
                        {
                            <div id="@divID" class="cell first_letter" oninput="handleWrite('@inputId', '@Model[y,x].WordNumber')" >
                                <input autocomplete="off" id="@inputId" onblur="restoreNumber('@inputId', '@Model[y,x].WordNumber')" onfocus="removeNumber('@inputId')" class="letterInput" type="text" maxlength="1" value="@Model[y,x].WordNumber" />
                            </div>
                        }
                        else
                        {
                            <div id="@divID" class="cell" oninput="handleWrite('@inputId')">
                                <input autocomplete="off" id="@inputId" class="letterInput" type="text" maxlength="1" />
                            </div>
                        }

                    }
                    else
                    {
                        <div class="cell_noBoreder"></div>
                    }
                }
            }
        </div>
    </section>

    <section class="descriptions_container">

        <h2>
            Definicje
        </h2>

        <ol>
            @for (int i = 0; i < Model.GetDescriptions().Count; i++)
            {
                <li>@Model.GetDescriptions()[i]</li>
            }
        </ol>

    </section>

</main>

<script>

    function restoreNumber(inputId, wordNumber){
        var input = document.getElementById(inputId);
        var div = document.getElementById("div_" + inputId);
        if (!input.disabled) {
            input.value = wordNumber;
        }
    }

    function removeNumber(inputId) {
        var input = document.getElementById(inputId);
        input.value = "";
    }

    function checkIfIsFinished() {
        $.ajax({
            url: '/Home/CheckIfFinished',
            type: 'POST',
            data: {},
            success: function (response) {
                if (response.success) {
                    var resultDiv = document.getElementById("result_div");
                    var timeH = document.getElementById("time_h");
                    var mainH = document.getElementById("main_h");
                    resultDiv.classList.remove("slide");
                    timeH.innerText = "Czas rozwiązania: " + response.time;
                    mainH.innerText = "Koniec!";
                } 
            },
            error: function (xhr, status, error) {
                console.error('Błąd:', error);
            }
        });
    }

    function handleWrite(inputId, wordNumber) {
        var input = document.getElementById(inputId);
        var letter = input.value;
        var coords = inputId.split("_");
        var row = coords[0];
        var column = coords[1];
        $.ajax({
            url: '/Home/GuessLetter',
            type: 'POST',
            data: { row: row, column: column, letter: letter },
            success: function (response) {
                if (response.success) {
                    input.setAttribute("disabled", true);
                    var div = document.getElementById("div_" + inputId);
                    div.style.backgroundColor = "lightgreen";
                    div.classList.add(".guessed-cell");
                    checkIfIsFinished();
                } else {
                    if (wordNumber == undefined) {
                        input.value = "";               
                    }else{
                        input.value = wordNumber;
                    }
                    input.setAttribute("disabled", true);
                    input.removeAttribute("disabled");
                }
            },
            error: function (xhr, status, error) {
                console.error('Błąd:', error);
            }
        });
    }

</script>



