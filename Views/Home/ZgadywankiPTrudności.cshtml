@{
    ViewData["Title"] = "Poziom Trudności";
}
@model Gry_Slownikowe.Models.ZgadywankiModel


<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" type="text/css" href="~/css/zgadywanki.css">

    @* czcionka *@
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">

</head>

<body>
    <div id="kontener">
    
         @* Okno dialogowe wybór poziomu trudności *@
        <div id="poziomModal" class="modal" style="display: none;">
           <div class="modal-content">
            <h1>Wybierz poziom trudności:</h1>

            <div class="poziom-buttons">
                    <button id="latwy" class="animowanyp-btn" onclick="wybierzPoziom('latwy')">Łatwy</button>
                    <button id="sredni" class="animowanyp-btn" onclick="wybierzPoziom('sredni')">Średni</button>
                    <button id="trudny" class="animowanyp-btn" onclick="wybierzPoziom('trudny')">Trudny</button>
            </div>

           </div>
        </div>

        @* czas *@
        <div id="licznik"></div>

        @* punktacja, tabelka z słowami do odgdnięcia *@
      <div id="prostokatM">

            <div id="ramkaPonumerowanychSlow" style="margin-top: 20px; ">
                <h2 class="tytul">Słowa do odgadnięcia:</h2>
                <ol>
                    <li id="slowo1" class="slowo" style="display: none;"></li>
                    <li id="slowo2" class="slowo" style="display: none;"></li>
                    <li id="slowo3" class="slowo" style="display: none;"></li>
                    <li id="slowo4" class="slowo" style="display: none;"></li>
                </ol>
            </div>
           
            <div id="error" class="error-message" style="display: none;">Błędne słowo!</div>


            <table id="punktyTable">
                <tr>
                    <th>Punkty</th>

                </tr>
                <tr>
                    <td id="punkty">0</td>

                </tr>
            </table>
      </div>

      @* klawiatura, miejsce na wpisanie chaseł *@
        <div id="prostokatL">

            <div id="ramkaWybranychSlow" style="margin-bottom: 10px;">
                <h2 class="tytul">Wpisywane słowa:</h2>
                <div id="wybraneLitery" style="margin-bottom: 10px;"></div>
            </div>

            <input type="text" id="wpisywaneSłowo" readonly style="margin-bottom: 10px;">
            <div id="buttonContainer" class="poziom-buttons">
            <button class="animowany-btn" onclick="usunOstatniaLitere()">Backspace</button>
                <button id="przyciskSprawdz" class="animowany-btn" onclick="sprawdz()">Sprawdź</button>
                <button id="przyciskMieszaj" class="animowany-btn" onclick="mieszaj_literki()">Mieszaj</button>
            </div>
            
            <div id="klawiatura" style="margin-top: 10px;"></div>
            
        </div>
        
    </div>

    <!-- Okno dialogowe o wygranej -->
    <div id="winModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeWinModal()">&times;</span>
            <h2>Gratulacje! :D</h2>
            <p>Odgadłeś/aś wszystkie słowa :3</p>
            <p>Punkty: <span id="modal-punkty"></span></p>
            <p>Czas: <span id="modal-czas"></span></p>
        </div>
    </div>

    <!-- Okno dialogowe o przegranej -->
    <div id="lostModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeLostModal()">&times;</span>
            <h2>Przykro mi :(</h2>
            <p>Może następnym razem odgadniesz wszystkie chasła</p>
            <p>Zdobyte punkty: <span id="modal-lost-punkty"></span></p>
            <p>Słowa do odgadnięcia:</p>
            <ul id="modal-lost-words"></ul>
        </div>
    </div>


    <script>

        var wybraneLitery = []; //tablica wybranych liter przez użytkownika (wybrane litery z klawiatury)
        var poziomWybrany = false; // Zmienna określająca, czy poziom trudności został wybrany
        var czasStartowy; //całkowity czas trwania gry (sekundy)
        var timer;
        var startTime; // dokładny czar rozpoczęcia gry - ile czasu minęło od rozpoczęcia gry (śledzenie kiedy gra się rozpoczęła)
        var punkty = 0; //Zmienna przechowująca punkty gracza

        //zmienne przechowujące wylosowane słowa z API
        var slowo1 = @Html.Raw(Json.Serialize(@Model.Slowo1));
        var slowo2 = @Html.Raw(Json.Serialize(@Model.Slowo2));
        var slowo3 = @Html.Raw(Json.Serialize(@Model.Slowo3));
        var slowo4 = @Html.Raw(Json.Serialize(@Model.Slowo4));


        document.getElementById('slowo1').innerHTML = slowo1;
        document.getElementById('slowo2').innerHTML = slowo2;
        document.getElementById('slowo3').innerHTML = slowo3;
        document.getElementById('slowo4').innerHTML = slowo4;

        var slowa = [slowo1, slowo2, slowo3, slowo4];

        // -----------------------
        //wyświetlenie słów zawartych w tabeli (konsola)
        gry_slownikowe_showme = () => {
            document.querySelectorAll('.slowo').forEach((el) => {
                el.style.display = 'flex';
            });
        }

        //schowanie słów zawartych w tabeli (konsola)
        gry_slownikowe_hide = () => {
            document.querySelectorAll('.slowo').forEach((el) => {
                el.style.display = 'none';
            });
        }
        //--------------------------


        //inicjalizacja klawiatury
        function inicjujKlawiature() {

            //Sprawdzamy czy dana litera jest w zbiorze jeżeli nie to ją dodajemy i tworzymy z niego przycisk
            var klawiatura = document.getElementById('klawiatura');
            klawiatura.innerHTML = '';

            let literki = new Set(); //nowy zbiór,który przechowuje unikalne litery
            for (let slowo of slowa) {
                for (let litera of slowo) { 
                    if (!literki.has(litera)) { //sprawdzamy powtóżenia
                        literki.add(litera);
                        let button = document.createElement('button');
                        button.innerHTML = litera;
                        button.disabled = true; // Na początku przyciski są wyłączone
                        button.addEventListener("click", () => {
                            wybierzLitere(litera);
                        });
                        klawiatura.appendChild(button); //dodajemy do klawiatury
                    }
                }
            }

            mieszaj_literki();
        }

        //funkcja dla miejsca z wpisywaniem słów
        function wybierzLitere(litera) {
            wybraneLitery.push(litera); // Dodajemy wybraną literę do tablicy wybranych liter
            aktualizujWpisywaneSłowo(); // Aktualizujemy wpisywane słowo
        }

        //działanie backspace
        function usunOstatniaLitere() {

            if (wybraneLitery.length > 0) {
                wybraneLitery.pop(); // Usuń ostatnią literę z tablicy wybranych liter
                aktualizujWpisywaneSłowo(); // Aktualizuj wpisywane słowo
            }
        }

        // Funkcja aktualizująca wpisywane słowo (wybierzLitere)
        function aktualizujWpisywaneSłowo() {
            var wpisywaneSłowo = document.getElementById('wpisywaneSłowo');
            wpisywaneSłowo.value = wybraneLitery.join('');
        }

        //funkcja sprawdzająca czy wpisane słowo znajduje się w tabeli
        function sprawdz() {
            var wpisaneSlowo = document.getElementById('wpisywaneSłowo').value;
            var slowaDoSprawdzenia = [slowo1, slowo2, slowo3, slowo4];

            for (var i = 0; i < slowaDoSprawdzenia.length; i++) {
                if (wpisaneSlowo === slowaDoSprawdzenia[i]) {
                    document.getElementById('slowo' + (i + 1)).style.display = 'block'; //wyświetlenie odgadniętego słowa
                    punkty += 5;
                    document.getElementById('punkty').innerHTML = punkty;
                    wyczyscBlad(); // Wyczyszczenie błędu po poprawnym słowie
                    if (punkty >= 20) { // Sprawdzenie, czy liczba punktów wynosi co najmniej 20
                        clearInterval(timer); // Zatrzymaj timer
                        showModal(); // Pokaz okienko z gratulacjami
                    }
                    return;
                }
            }
            pokazBlad();
        }

        // Funkcja pokazująca błąd
        function pokazBlad() {
            var error = document.getElementById('error');
            error.style.display = 'block';
            setTimeout(function () {
                error.style.display = 'none';
            }, 2000); // Ukryj błąd po 2 sekundach
        }

        // Funkcja czyszcząca błąd
        function wyczyscBlad() {
            var error = document.getElementById('error');
            error.style.display = 'none';
        }

        // Funkcja aktualizująca wpisywane słowo (wybierzLitere)
        function aktualizujWpisywaneSłowo() {
            var wpisywaneSłowo = document.getElementById('wpisywaneSłowo');
            wpisywaneSłowo.value = wybraneLitery.join('');
            wyczyscBlad(); // Wyczyszczenie błędu po wpisaniu nowej litery
        }



                


        //Mieszanie liter/przycisków, zmiana kolejności
        function mieszaj_literki() {
            let klawiatura = document.getElementById('klawiatura');
            let przyciski = Array.from(klawiatura.children);

            for (let i = przyciski.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [przyciski[i], przyciski[j]] = [przyciski[j], przyciski[i]];
            }

            klawiatura.innerHTML = '';
            przyciski.forEach(i => klawiatura.appendChild(i));
        }

        //okienko z wyborem poziomu - odrazu się pokaże po załadowaniu strony
        document.addEventListener('DOMContentLoaded', function () {
            openPoziomModal();
        });
        
        function openPoziomModal() {
            var modal = document.getElementById("poziomModal");
           // var modalContent = document.querySelector(".modal-content");
            modal.style.display = "block";
        }

        //Wybur poziomu trudności
        function wybierzPoziom(poziom) {
            switch (poziom.toLowerCase()) {
                case 'latwy':
                    czasStartowy = 20 * 60;
                    break;
                case 'sredni':
                    czasStartowy = 15 * 60;
                    break;
                case 'trudny':
                    czasStartowy = 1 * 60;
                    break;
                default:
                    czasStartowy = 0;
            }
            poziomWybrany = true;

            // Odblokowujemy przyciski na klawiaturze po wybraniu poziomu trudności
            var klawiatura = document.getElementById('klawiatura');
            var buttons = klawiatura.getElementsByTagName('button');
            for (var button of buttons) {
                button.disabled = false;
            }

            var ramkaPoziomu = document.getElementById('poziomModal');
            ramkaPoziomu.style.display = 'none';

            rozpocznijGre();

            
        }

        function rozpocznijGre() {
            var licznik = document.getElementById('licznik');
            var czas = czasStartowy;
            startTime = new Date();

            //czas
            function odliczanieCzasu() {
                var minuty = Math.floor(czas / 60);
                var sekundy = czas % 60;
                licznik.innerHTML = minuty + 'm ' + (sekundy < 10 ? '0' : '') + sekundy + 's';
                czas--;
                if (czas < 0) {
                    clearInterval(timer);
                    showLostModal(); // Wywołaj funkcję pokazującą okno o przegranej
                }
            }

            clearInterval(timer);
            odliczanieCzasu();
            timer = setInterval(odliczanieCzasu, 1000);
        }

        //podesłanie wyników punktów oraz czasu do bazy danych
        function sendGameData(gameTime) {
            $.ajax({
                url: '@Url.Action("ZgadywankiWynik", "Home")',
                type: 'POST',
                
                data: {

                    punkty: punkty,
                    gameTime: gameTime
                },
                success: function (response) {
                    console.log('Data saved successfully:', response);
                },
                error: function (xhr, status, error) {
                    console.error('Error saving data:', {
                        readyState: xhr.readyState,
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText
                    });
                }
            });
        }


        //okienko z wygraną
        function showModal() {
            var modal = document.getElementById("winModal");
            var modalPunkty = document.getElementById("modal-punkty");
            var modalCzas = document.getElementById("modal-czas");

            modalPunkty.innerHTML = punkty;


            var gameTimeT = getTimeElapsed(startTime, new Date());//getTimeElapsed(startTime, new Date());
            var endTime = new Date();
            var gameTime = endTime - startTime;

            modalCzas.innerHTML = gameTimeT;
            console.log(gameTime);
            sendGameData(gameTime); //Przesłanie danych

            modal.style.display = "block";
        }

        function getTimeElapsed(startTime, endTime) {
            // Obliczanie różnicy czasu w milisekundach
            var elapsedTime = endTime - startTime;
            // Konwersja milisekund na sekundy
            var seconds = elapsedTime / 1000;
            return seconds;
        }

        //okienko z przegraną
        function showLostModal() {
            var modal = document.getElementById("lostModal");
            var modalPunkty = document.getElementById("modal-lost-punkty"); //punkty
            var modalAllWords = document.getElementById("modal-lost-words"); // słowa do odgadnięcia

            // Wyczyść listę i dodaj wszystkie słowa
            modalAllWords.innerHTML = "";
            slowa.forEach(function (slowo) {
                var div = document.createElement("div");
                div.textContent = " -> " + slowo; 
                modalAllWords.appendChild(div);
            });

            // punkty w prawym górnym rogu okna
            modalPunkty.innerHTML = punkty;


            modal.style.display = "block";

            // Prześlij dane do bazy danych
            var endTime = new Date();
            var gameTime = endTime - startTime;
            //console.log(gameTime);
            sendGameData(gameTime);
        }

        //ukrycie okna
        function closeModal() {
            var modal = document.getElementById("myModal");
            modal.style.display = "none";
        }

        //obliczanie czasu rozgrywki (mm:ss)
        function getTimeElapsed(start, end) {
            var diff = Math.abs(end - start) / 1000;
            var minutes = Math.floor(diff / 60);
            var seconds = Math.floor(diff % 60);
            return (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
        }

        // Funkcja zamykająca okno dialogowe o wygranej
        function closeWinModal() {
            var modal = document.getElementById("winModal");
            modal.style.display = "none";
            window.location.reload(); // Odśwież stronę
        }

        // Funkcja zamykająca okno dialogowe o przegranej
        function closeLostModal() {
            var modal = document.getElementById("lostModal");
            modal.style.display = "none";
            window.location.reload(); // Odśwież stronę
        }

        document.addEventListener('DOMContentLoaded', inicjujKlawiature);

            </script>



</body>
</html>

